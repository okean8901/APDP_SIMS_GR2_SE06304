@model IEnumerable<StudentManagementSystem.Models.Entities.User>
@{
    ViewData["Title"] = "User Management";
    var editUser = ViewBag.EditUser as StudentManagementSystem.Models.Entities.User;
    var roles = ViewBag.Roles as List<StudentManagementSystem.Models.Entities.Role>;
}

<h1 class="display-4">User Management</h1>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (editUser != null)
{
    <div class="form-container">
        <h2>Edit User</h2>
        <form asp-action="UpdateUser" method="post">
            <input type="hidden" name="UserId" value="@editUser.UserId" />
            
            <div class="mb-3">
                <label for="Username" class="form-label">Username</label>
                <input type="text" id="Username" name="Username" value="@editUser.Username" class="form-control" required />
            </div>
            
            <div class="mb-3">
                <label for="FullName" class="form-label">Full Name</label>
                <input type="text" id="FullName" name="FullName" value="@editUser.FullName" class="form-control" required />
            </div>
            
            <div class="mb-3">
                <label for="Email" class="form-label">Email</label>
                <input type="email" id="Email" name="Email" value="@editUser.Email" class="form-control" required />
            </div>
            
            <div class="mb-3">
                <label for="Password" class="form-label">Password (leave blank to keep current)</label>
                <input type="password" id="Password" name="Password" class="form-control" />
            </div>
            
            <div class="mb-3">
                <label for="Role" class="form-label">Role</label>
                <select id="Role" name="Role" class="form-select">
                    <option value="">-- Select Role --</option>
                    @if (roles != null)
                    {
                        foreach (var role in roles)
                        {
                            var isSelected = editUser.UserRoles != null && editUser.UserRoles.Any(ur => ur.RoleId == role.RoleId);
                            <option value="@role.RoleName" selected="@(isSelected ? "selected" : null)">@role.RoleName</option>
                        }
                    }
                </select>
            </div>
            
            <div class="mb-3 form-check">
                <input type="checkbox" id="IsActive" name="IsActive" class="form-check-input" value="true" @(editUser.IsActive ? "checked" : "") />
                <label for="IsActive" class="form-check-label">Active</label>
            </div>
            
            <button type="submit" class="btn btn-primary">Update User</button>
            <a asp-action="UserManagement" class="btn btn-secondary">Cancel</a>
        </form>
    </div>
}

<div class="table-container">
    <h2>All Users</h2>
    <table class="table">
        <thead>
            <tr>
                <th>Username</th>
                <th>Full Name</th>
                <th>Email</th>
                <th>Role</th>
                <th>Status</th>
                <th>Last Login</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model)
            {
                <tr>
                    <td>@user.Username</td>
                    <td>@user.FullName</td>
                    <td>@user.Email</td>
                    <td>
                        @if (user.UserRoles != null && user.UserRoles.Any())
                        {
                            @string.Join(", ", user.UserRoles.Select(ur => ur.Role.RoleName))
                        }
                        else
                        {
                            <span>No Roles</span>
                        }
                    </td>
                    <td>
                        @if (user.IsActive)
                        {
                            <span class="status-badge active-badge">Active</span>
                        }
                        else
                        {
                            <span class="status-badge inactive-badge">Inactive</span>
                        }
                    </td>
                    <td>@user.LastLogin.ToString("yyyy-MM-dd HH:mm")</td>
                    <td>
                        <a asp-action="UserManagement" asp-route-id="@user.UserId" class="btn btn-warning">Edit</a>
                        <a asp-action="DeleteUser" asp-route-id="@user.UserId" class="btn btn-danger" 
                           onclick="return confirm('Are you sure you want to delete this user?')">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <link rel="stylesheet" href="~/css/usermanagement.css" asp-append-version="true" />
}